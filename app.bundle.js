!function(t){var e={};function r(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)r.d(n,s,function(e){return t[e]}.bind(null,s));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e,r){},function(t,e,r){"use strict";r.r(e);r(0);class n{check(t){console.log("chaekValid");let e=0,r=!1;for(let n=t.length-1;n>=0;n--){let s=parseInt(t.charAt(n),10);r&&(s*=2)>9&&(s-=9),e+=s,r=!r}if(e%10==0)return!0}}class s{constructor(t){this.parentEl=t,this.cards=t.getElementsByTagName("span"),this.blackout=this.blackout.bind(this)}check(t){console.log("paymentcheck");const e=parseInt(t.charAt(0),10),r=parseInt(t.charAt(1),10);2===e?this.blackout("mir"):3===e?(0!==r&&6!==r&&8!==r||this.blackout("diners_club"),4!==r&&7!==r||this.blackout("amex"),1!==r&&5!==r||this.blackout("jcb")):4===e?this.blackout("visa"):5===e?this.blackout("master"):6===e&&this.blackout("discover")}blackout(t){for(let e=0;e<this.cards.length;e++){const r=this.cards[e];!1===r.classList.contains(t)&&r.classList.add("blackout")}}}document.body.innerHTML='<div id="container"></div>';const c=document.querySelector("#container");new class{constructor(t){this.parentEl=t,this.chekValid=new n,this.paymentSystemCheck=new s(this.parentEl),this.check=this.check.bind(this)}static get markup(){return'\n        <h1>Check your credit card number</h1>\n            <ul class="cards list-unstyled">\n            <li><span class="card visa" title="Visa">Visa</span></li>\n            <li><span class="card master" title="Mastercard">Mastercard</span></li>\n            <li><span class="card amex" title="American Express">American Express</span></li>\n            <li><span class="card discover" title="Discover">Discover</span></li>\n            <li><span class="card jcb" title="JCB">JCB</span></li>\n            <li><span class="card diners_club" title="Diners Club">Diners Club</span></li>\n            <li><span class="card mir" title="Mir">Mir</span></li>\n            </ul>\n            <form class="form-inline" novalidate="novalidate">\n            <div class="form">\n            <input class="form-control" type="text" placeholder="Credit card number" data-original-title="" title="">\n            <a id="submitform" class="btn btn-success">Click to Validate</a>\n            </div>\n            </form>'}static get inputSelector(){return".form-control"}static get submitSelector(){return".btn-success"}bindToDOM(){this.parentEl.innerHTML=this.constructor.markup;this.parentEl.querySelector(this.constructor.submitSelector).addEventListener("click",t=>this.check(t))}check(t){t.preventDefault(),this.parentEl.querySelectorAll(".card").forEach(t=>{t.classList.remove("blackout")}),!0===this.chekValid.check(this.parentEl.querySelector(".form-control").value)?this.paymentSystemCheck.check(this.parentEl.querySelector(".form-control").value):alert("Некорректно введён номер карты")}}(c).bindToDOM()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,